{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3294812,"sourceType":"datasetVersion","datasetId":1993933},{"sourceId":12919747,"sourceType":"datasetVersion","datasetId":8175039}],"dockerImageVersionId":31089,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\nprint(df.shape)          #gives rows x columns\nprint(df.info())         #gives datatypes \nprint(df.head())         #gives first 5 rows\nprint(df.tail())         #gives last 5 rows\nprint(df.describe())     #describes the numeric columns\n\n\n\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"execution_failed":"2025-08-31T07:47:45.151Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\nprint(df.isnull().sum())   #counting null values\ndf=df.dropna()      #removes missing values\nprint(df.isnull().sum())\ndf[\"name_length\"] = df[\"name\"].astype(str).str.len()   #add new feature\nprint(df.head())","metadata":{"trusted":true,"execution":{"execution_failed":"2025-08-31T07:47:45.152Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\n\nnp_data=df.select_dtypes(include=[np.number]).to_numpy() #loading with numpy\n \nnum = np.nanmean(np_data, axis=0)        #handle missing using numpy\nnat = np.where(np.isnan(np_data))\nnp_data[nat] = np.take(num, nat[1])\nprint(np_data)\nprint(num)\nprint(nat)\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T08:05:03.021060Z","iopub.execute_input":"2025-08-31T08:05:03.021403Z","iopub.status.idle":"2025-08-31T08:05:05.563351Z","shell.execute_reply.started":"2025-08-31T08:05:03.021375Z","shell.execute_reply":"2025-08-31T08:05:05.562137Z"}},"outputs":[{"name":"stdout","text":"[[   0.    0.]\n [   5.    0.]\n [   0.    0.]\n ...\n [ 257.   10.]\n [2357.   15.]\n [  40.    8.]]\n[1.02207040e+04 8.79596074e+00]\n(array([436666, 436667, 437264, 437265, 439102, 439103, 439104, 457848,\n       457849, 457850, 457851]), array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\ndf=df.drop_duplicates()   #dropping duplicate values\n\nscaler = StandardScaler()   #scaling features\ncol = df.select_dtypes(include=[np.number]).columns\ndf[col] = scaler.fit_transform(df[col])\n\nx = df.drop(columns=[\"popularity\"])   #train test split\ny = df[\"popularity\"]                  \nx_train, x_test, y_train, y_test = train_test_split(\n    x, y, test_size=0.2, random_state=42)\nprint(x)\nprint(y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T08:08:38.831601Z","iopub.execute_input":"2025-08-31T08:08:38.831964Z","iopub.status.idle":"2025-08-31T08:08:42.589726Z","shell.execute_reply.started":"2025-08-31T08:08:38.831935Z","shell.execute_reply":"2025-08-31T08:08:42.588434Z"}},"outputs":[{"name":"stdout","text":"                             id  followers            genres  \\\n0        0DheY5irMjBUeLybbCUEZ2  -0.040176                []   \n1        0DlhY15l3wsrnlfGio2bjU  -0.040156                []   \n2        0DmRESX2JknGPQyO15yxg7  -0.040176                []   \n3        0DmhnbHjm1qw6NCYPeZNgJ  -0.040176                []   \n4        0Dn11fWM7vHQ3rinvWEl4E  -0.040168                []   \n...                         ...        ...               ...   \n1162090  3cOzi726Iav1toV2LRVEjp  -0.021186  ['black comedy']   \n1162091  6LogY6VMM3jgAE6fPzXeMl  -0.039995                []   \n1162092  19boQkDEIay9GaVAWkUhTa  -0.039166                []   \n1162093  5nvjpU3Y7L6Hpe54QuvDjy  -0.030911  ['black comedy']   \n1162094  2bP2cNhNBdKXHC6AnqgyVp  -0.040019    ['new comedy']   \n\n                                                   name  \n0        Armid & Amir Zare Pashai feat. Sara Rouzbehani  \n1                                           ปูนา ภาวิณี  \n2                                                 Sadaa  \n3                                             Tra'gruda  \n4                                Ioannis Panoutsopoulos  \n...                                                 ...  \n1162090                                      Ali Siddiq  \n1162091                                    Rodney Laney  \n1162092                                    Blake Wexler  \n1162093                                Donnell Rawlings  \n1162094                                        Gabe Kea  \n\n[1162095 rows x 4 columns]\n0         -0.648777\n1         -0.648777\n2         -0.648777\n3         -0.648777\n4         -0.648777\n             ...   \n1162090    1.859012\n1162091   -0.501260\n1162092    0.088808\n1162093    0.457601\n1162094   -0.058709\nName: popularity, Length: 1162095, dtype: float64\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\n\nprint(df.mean(numeric_only=True))      #mean\nprint(df.median(numeric_only=True))    #median\nprint(df.std(numeric_only=True))       #standard deviation\nprint(df.corr(numeric_only=True))      #correlation check\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T08:12:49.111428Z","iopub.execute_input":"2025-08-31T08:12:49.111783Z","iopub.status.idle":"2025-08-31T08:12:51.426324Z","shell.execute_reply.started":"2025-08-31T08:12:49.111760Z","shell.execute_reply":"2025-08-31T08:12:51.425136Z"}},"outputs":[{"name":"stdout","text":"followers     10220.703975\npopularity        8.795961\ndtype: float64\nfollowers     57.0\npopularity     2.0\ndtype: float64\nfollowers     254399.492553\npopularity        13.557767\ndtype: float64\n            followers  popularity\nfollowers    1.000000    0.171101\npopularity   0.171101    1.000000\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\n\ndf['popularity'].hist(bins=20)    #histogram\nprint('histogram:-')\nplt.show()\n\ndf.groupby('name')['popularity'].mean().nlargest(5).plot(kind='bar')      #bar graph\nprint('bar graph:-')\nplt.show()\n\nplt.scatter(df['followers'], df['popularity'])      #scatter plot\nplt.xlabel('Followers')\nplt.ylabel('Popularity')\nprint('scatter plot:-')\nplt.show()\n\nsns.boxplot(x=df['popularity'])            #boxplot\nprint('boxplot:-')\nplt.show()\n\nsns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')      #heatmap\nprint('heatmap:-')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T08:23:00.556760Z","iopub.execute_input":"2025-08-31T08:23:00.557642Z","iopub.status.idle":"2025-08-31T08:23:09.963206Z","shell.execute_reply.started":"2025-08-31T08:23:00.557610Z","shell.execute_reply":"2025-08-31T08:23:09.962362Z"}},"outputs":[{"name":"stdout","text":"histogram:-\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"bar graph:-\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"scatter plot:-\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"boxplot:-\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAggAAAGwCAYAAADMjZ3mAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAAA9hAAAPYQGoP6dpAAAb/ElEQVR4nO3dfZDVdb3A8c9Zln3gLuwaCIiyaF1G9KKJPAjYnRiyBKtL5rUEVMi0sYALOqX24M3JMba6oxf1znWy8iHBp66iOVHjaHYvXuRJwUgjGissQROjXRMQdr/3D8dzOX55XJY9C75eM8zs+f2+e/az32E4b37n7NlCSikFAMBOKso9AADQ9QgEACAjEACAjEAAADICAQDICAQAICMQAIBMZXs/sa2tLV566aXo2bNnFAqFjpwJADhIUkrR0tISAwYMiIqK3V8naHcgvPTSSzFw4MD2fjoAUEYvvvhiHHPMMbs93+5A6NmzZ/EL9OrVq713AwB0oubm5hg4cGDxcXx32h0Ibz+t0KtXL4EAAIeYvb08wIsUAYCMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACBTWe4BdpZSiq1bt+51zbZt2yIiorq6OgqFQmeMdlDV1NQcFt8HAIePLhUIW7dujYkTJ5Z7jE63aNGiqK2tLfcYAFDkKQYAINOlriDs7PVTJkeq2MV4rduj5+p7IiKi5f3nRXTr3smTdYxC246oW3V3uccAgF3qsoGQKir3/uDfrfshGwip3AMAwB54igEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMhUlnuAnaWUdr5RvkE4ZKWUYuvWrRERUVNTE4VCocwTARyautQVhG3btv3/jbYd5RuEQ9bWrVtj4sSJMXHixGIoALD/ulQgAABdg0AAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgExluQeAg23cuHHFj5944oldHrPGmgNZU+6vb83+rxk/fny0tbVFRUVFPP744zFx4sTYsmVL1NbWxqJFiyIi4p//+Z/j1VdfjT59+sSPfvSj+P73vx/z58+PqVOnxmc/+9mIiJg5c2asWbMmhg4dGjfffHNcc801xa95zTXXxK7sy5r//d//jXnz5sXs2bNj7Nixu1xzsBVSSqk9n9jc3Bz19fXx17/+NXr16tUhw/zlL3+Js88+OyIiWt5/XkRVj3xR6/bo+fQP31pz6gUR3bp3yNfudDt9H4sWLYra2toyD3R42LJlS0ycODEi3trXtz8GDo7q6urYtm3bbs/X19dH9+7d49VXX93tmmHDhkX37t1j2bJlxWO9e/eOTZs2FW9PmjQpKisr47/+67+KxwYNGhR/+MMfStYcddRRccsttxSPjRkzJpYsWVK8PWvWrOjRo0d861vfKh4755xzSu63qakp6urqYubMmSXHvvKVrxSj4oEHHojm5ua48MILi2uuv/76uPzyy4u377333ujXr1/J9/ryyy/Hpz/96T2u2bp1a5x//vnFOLnrrruipqZmd9u33/b18VsglItAOCgEAtARCoVC7Onh8eSTT47f/va38cYbb+x2Td++feO+++4rOXbuuefGn//85z2u+f73vx933XVXpJSiUCjEBRdcEBdddFE7v5Pcvj5+e4qhXHb6i7d169YyDnJ42XkvxQHQXnv7v/Ozzz671/t45ZVX4qc//WlMmDAhIiJ++tOflsTBrtb88Y9/jAULFhS/fkopFixYEB/5yEfimGOOac+30m77HAjbtm0ruYzU3Nx8UAZ612jbUfzw7asmABxevvOd78SHP/zh4sd7WlNRURHz5s3LzqeUYt68efHtb387CoXCQZ13Z/v8Uwxz586N+vr64p+BAwcezLkA4JDX2toajzzySDzyyCPR2tq6xzXr16+P5cuXZ+taW1tj+fLlsX79+s4YuWifryB8+ctfLnnxRXNzs0g4EBX/v/UPPvhgh74A5d1s69atrsgAXUZlZWV87GMfi4iIG2+8cZeR8PaaioqKGDlyZDz99NMl67p16xbDhw+PxsbGTps7Yj8Cobq6Oqqrqw/mLO8uO10mqqmp8SJFgMPQFVdcEd26dYuIiC996UvR1NS0xzWzZ8+OadOmlZwvFAoxe/bsTn16IcIbJXEYe/tnmQH2194ejE8++eTo0WMXP2m3k759+8ZHPvKR4u0JEybEkUceucc1xxxzTEyZMqX49QuFQkyZMiWOPvro/f0WDphAAKDd9nZlub6+Pvr06bPHNcOGDYtRo0aVHOvdu3fJ7UmTJsU555xTcmzQoEHZmksvvbTk2JgxY0puz5o1K6688sqSY++836amprjpppuyYxUVbz1kVlRUxDe+8Y2S91uIeOt9EHb2zvuIiLj55pv3umbq1KnF779Pnz4xZcqUbE1nEAgc1t5+17Sdb+/qmDXWHMiacn/9cq752c9+tsc1Dz30UPzoRz/a45obbrghvv3tb5cc2/mNiyIiLrvsspg1a1bJsTvuuCNbc95555Ucmzt3bsntc845JyZOnFjyYD9r1qzi07y1tbUxevToGDp0aDFs+vTpE6NHj46pU6dGRUVFTJ06NRoaGqKxsTGGDh0aERFDhw6NU089tfiujePGjcveACkiol+/fntdU1NTE5dffnn069cvLrvssrK9Rs0bJZWLN0o6KN75Rkn2FaDUvj5+u4IAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAAJnKcg+ws+rq6v+/UdGlRuMQUVNTE4sWLSp+DED7dKlH4UKhsPON8g3CIatQKERtbW25xwA45HmKAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACAjEACAjEAAADICAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyFSWe4DdKbTtiLSrE63bd/3xIabQtqPcIwDAbnXZQKhbdfde1/RcfU8nTAIA7z6eYgAAMl3qCkJNTU0sWrRoj2tSSrFt27aIiKiuro5CodAZox1UNTU15R4BAEp0qUAoFApRW1u713U9evTohGkA4N3LUwwAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAEBGIAAAGYEAAGQEAgCQEQgAQEYgAAAZgQAAZAQCAJARCABARiAAABmBAABkBAIAkBEIAECmsr2fmFKKiIjm5uYOGwYAOLjeftx++3F8d9odCC0tLRERMXDgwPbeBQBQJi0tLVFfX7/b84W0t4TYjba2tnjppZeiZ8+eUSgU2j3gOzU3N8fAgQPjxRdfjF69enXY/ZKz153DPncO+9w57HPnOJj7nFKKlpaWGDBgQFRU7P6VBu2+glBRURHHHHNMez99r3r16uUvXyex153DPncO+9w57HPnOFj7vKcrB2/zIkUAICMQAIBMlwuE6urq+PrXvx7V1dXlHuWwZ687h33uHPa5c9jnztEV9rndL1IEAA5fXe4KAgBQfgIBAMgIBAAgIxAAgEyXC4T/+I//iGOPPTZqamritNNOi2XLlpV7pEPa3LlzY+TIkdGzZ8/o27dvfOITn4i1a9eWrNm6dWvMmDEjevfuHXV1dXHOOefEyy+/XKaJDw9NTU1RKBRizpw5xWP2uWP86U9/ivPPPz969+4dtbW1cdJJJ8WKFSuK51NK8a//+q9x1FFHRW1tbZxxxhmxbt26Mk586GltbY2rr746jjvuuKitrY33ve99ce2115a8d799bp///u//jo9//OMxYMCAKBQKsXDhwpLz+7Kvr732WkydOjV69eoVDQ0N8dnPfjZef/31jh82dSH33HNPqqqqSj/4wQ/Sr371q3TJJZekhoaG9PLLL5d7tEPWmWeemW677ba0Zs2atGrVqnTWWWelxsbG9PrrrxfXXHrppWngwIHpscceSytWrEijR49OY8eOLePUh7Zly5alY489Np188slp9uzZxeP2+cC99tpradCgQWn69Olp6dKl6YUXXkg/+9nP0m9/+9vimqamplRfX58WLlyYVq9enf7pn/4pHXfccWnLli1lnPzQct1116XevXunRx55JP3ud79L999/f6qrq0vz5s0rrrHP7fOTn/wkffWrX00PPPBAioj04IMPlpzfl32dMGFCev/735+eeuqp9D//8z/p7//+79PkyZM7fNYuFQijRo1KM2bMKN5ubW1NAwYMSHPnzi3jVIeXV155JUVE+sUvfpFSSmnz5s2pe/fu6f777y+uef7551NEpCVLlpRrzENWS0tLGjx4cHr00UfTBz/4wWIg2OeOceWVV6YPfOADuz3f1taW+vfvn77zne8Uj23evDlVV1enu+++uzNGPCx89KMfTRdddFHJsU9+8pNp6tSpKSX73FHeGQj7sq/PPfdcioi0fPny4ppFixalQqGQ/vSnP3XofF3mKYY333wzVq5cGWeccUbxWEVFRZxxxhmxZMmSMk52ePnrX/8aERHvec97IiJi5cqVsX379pJ9HzJkSDQ2Ntr3dpgxY0Z89KMfLdnPCPvcUR5++OEYMWJEnHvuudG3b98YNmxY3HrrrcXzv/vd72Ljxo0l+1xfXx+nnXaafd4PY8eOjcceeyx+85vfRETE6tWrY/HixTFx4sSIsM8Hy77s65IlS6KhoSFGjBhRXHPGGWdERUVFLF26tEPnafcva+por776arS2tka/fv1Kjvfr1y9+/etfl2mqw0tbW1vMmTMnTj/99Bg6dGhERGzcuDGqqqqioaGhZG2/fv1i48aNZZjy0HXPPffE008/HcuXL8/O2eeO8cILL8R//ud/xuWXXx5f+cpXYvny5fEv//IvUVVVFdOmTSvu5a7+HbHP++6qq66K5ubmGDJkSHTr1i1aW1vjuuuui6lTp0ZE2OeDZF/2dePGjdG3b9+S85WVlfGe97ynw/e+ywQCB9+MGTNizZo1sXjx4nKPcth58cUXY/bs2fHoo49GTU1Nucc5bLW1tcWIESPim9/8ZkREDBs2LNasWRO33HJLTJs2rczTHT7uu+++mD9/fixYsCD+4R/+IVatWhVz5syJAQMG2Od3kS7zFEOfPn2iW7du2au6X3755ejfv3+Zpjp8zJw5Mx555JH4+c9/XvJruvv37x9vvvlmbN68uWS9fd8/K1eujFdeeSVOPfXUqKysjMrKyvjFL34RN954Y1RWVka/fv3scwc46qij4sQTTyw5dsIJJ8T69esjIop76d+RA/OlL30prrrqqjjvvPPipJNOigsuuCAuu+yymDt3bkTY54NlX/a1f//+8corr5Sc37FjR7z22msdvvddJhCqqqpi+PDh8dhjjxWPtbW1xWOPPRZjxowp42SHtpRSzJw5Mx588MF4/PHH47jjjis5P3z48OjevXvJvq9duzbWr19v3/fDhz70ofjlL38Zq1atKv4ZMWJETJ06tfixfT5wp59+evZjur/5zW9i0KBBERFx3HHHRf/+/Uv2ubm5OZYuXWqf98Mbb7wRFRWlDw/dunWLtra2iLDPB8u+7OuYMWNi8+bNsXLlyuKaxx9/PNra2uK0007r2IE69CWPB+iee+5J1dXV6fbbb0/PPfdc+tznPpcaGhrSxo0byz3aIevzn/98qq+vT0888UTasGFD8c8bb7xRXHPppZemxsbG9Pjjj6cVK1akMWPGpDFjxpRx6sPDzj/FkJJ97gjLli1LlZWV6brrrkvr1q1L8+fPTz169Eh33XVXcU1TU1NqaGhIDz30UHr22WfTpEmT/Pjdfpo2bVo6+uijiz/m+MADD6Q+ffqkK664orjGPrdPS0tLeuaZZ9IzzzyTIiJdf/316Zlnnkl/+MMfUkr7tq8TJkxIw4YNS0uXLk2LFy9OgwcPPvx/zDGllG666abU2NiYqqqq0qhRo9JTTz1V7pEOaRGxyz+33XZbcc2WLVvSF77whXTEEUekHj16pLPPPjtt2LChfEMfJt4ZCPa5Y/z4xz9OQ4cOTdXV1WnIkCHpu9/9bsn5tra2dPXVV6d+/fql6urq9KEPfSitXbu2TNMempqbm9Ps2bNTY2NjqqmpSe9973vTV7/61bRt27biGvvcPj//+c93+W/ytGnTUkr7tq+bNm1KkydPTnV1dalXr17pM5/5TGppaenwWf26ZwAg02VegwAAdB0CAQDICAQAICMQAICMQAAAMgIBAMgIBAAgIxAAgIxAAHZp3LhxMWfOnAO+n2uuuSZOOeWUA74foHMJBOCg+uIXv1jyy2emT58en/jEJ8o3ELBPKss9AHB4SilFa2tr1NXVRV1dXbnHAfaTKwjQxYwbNy5mzpwZM2fOjPr6+ujTp09cffXV8favTfnLX/4SF154YRxxxBHRo0ePmDhxYqxbt674+bfffns0NDTEwoULY/DgwVFTUxNnnnlmvPjii8U1u/pf/Jw5c2LcuHG7neuHP/xhjBgxInr27Bn9+/ePKVOmlPxe+ieeeCIKhUIsWrQohg8fHtXV1bF48eKSpxiuueaauOOOO+Khhx6KQqEQhUIhnnjiiRg/fnzMnDmz5Ov9+c9/jqqqqpKrD0DnEQjQBd1xxx1RWVkZy5Yti3nz5sX1118f3/ve9yLirQf3FStWxMMPPxxLliyJlFKcddZZsX379uLnv/HGG3HdddfFnXfeGU8++WRs3rw5zjvvvAOaafv27XHttdfG6tWrY+HChfH73/8+pk+fnq276qqroqmpKZ5//vk4+eSTS8598YtfjE996lMxYcKE2LBhQ2zYsCHGjh0bF198cSxYsCC2bdtWXHvXXXfF0UcfHePHjz+guYH28RQDdEEDBw6MG264IQqFQhx//PHxy1/+Mm644YYYN25cPPzww/Hkk0/G2LFjIyJi/vz5MXDgwFi4cGGce+65EfHWg/nNN98cp512WkS8FRwnnHBCLFu2LEaNGtWumS666KLix+9973vjxhtvjJEjR8brr79e8hTCN77xjfjwhz+8y/uoq6uL2tra2LZtW/Tv3794/JOf/GTMnDkzHnroofjUpz4VEW9dCZk+fXoUCoV2zQscGFcQoAsaPXp0yQPjmDFjYt26dfHcc89FZWVl8YE/IqJ3795x/PHHx/PPP188VllZGSNHjizeHjJkSDQ0NJSs2V8rV66Mj3/849HY2Bg9e/aMD37wgxERsX79+pJ1I0aM2O/7rqmpiQsuuCB+8IMfRETE008/HWvWrNnlFQqgcwgEeBeqqKgovqbhbTs/RfFOf/vb3+LMM8+MXr16xfz582P58uXx4IMPRkTEm2++WbL27/7u79o108UXXxyPPvpo/PGPf4zbbrstxo8fH4MGDWrXfQEHTiBAF7R06dKS20899VQMHjw4TjzxxNixY0fJ+U2bNsXatWvjxBNPLB7bsWNHrFixonh77dq1sXnz5jjhhBMiIuLII4+MDRs2lHyNVatW7XaeX//617Fp06ZoamqKf/zHf4whQ4aUvEBxf1RVVUVra2t2/KSTTooRI0bErbfeGgsWLCh5SgPofAIBuqD169fH5ZdfHmvXro277747brrpppg9e3YMHjw4Jk2aFJdcckksXrw4Vq9eHeeff34cffTRMWnSpOLnd+/ePWbNmhVLly6NlStXxvTp02P06NHF1x+MHz8+VqxYEXfeeWesW7cuvv71r8eaNWt2O09jY2NUVVXFTTfdFC+88EI8/PDDce2117brezv22GPj2WefjbVr18arr75acuXi4osvjqampkgpxdlnn92u+wc6hkCALujCCy+MLVu2xKhRo2LGjBkxe/bs+NznPhcREbfddlsMHz48Pvaxj8WYMWMipRQ/+clPonv37sXP79GjR1x55ZUxZcqUOP3006Ouri7uvffe4vkzzzwzrr766rjiiiti5MiR0dLSEhdeeOFu5znyyCPj9ttvj/vvvz9OPPHEaGpqin/7t39r1/d2ySWXxPHHHx8jRoyII488Mp588sniucmTJ0dlZWVMnjw5ampq2nX/QMcopHc+EQmU1bhx4+KUU06Jf//3f2/X599+++0xZ86c2Lx5c4fO1Rl+//vfx/ve975Yvnx5nHrqqeUeB97V/JgjUHbbt2+PTZs2xde+9rUYPXq0OIAuwFMMQNk9+eSTcdRRR8Xy5cvjlltuKfc4QHiKAQDYBVcQAICMQAAAMgIBAMgIBAAgIxAAgIxAAAAyAgEAyAgEACDzfz7IO0y1ZvofAAAAAElFTkSuQmCC\n"},"metadata":{}},{"name":"stdout","text":"heatmap:-\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"import pandas as pd\nfrom sklearn import datasets\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler, MinMaxScaler\nfrom sklearn.impute import SimpleImputer\n\ndf=pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\n\na = datasets.load_iris()                #importing datasets from sklearn\nx_iris = pd.DataFrame(a.data, columns=a.feature_names)\ny_iris = a.target\nprint(x_iris)\nprint(y_iris)\n\nimputer = SimpleImputer(strategy=\"mean\")      #replacing null values\nx_imputer = imputer.fit_transform(x_iris)\nprint(x_imputer)\n\nle = LabelEncoder()            #label encoding\ny_labelencoded = le.fit_transform(y_iris)\nprint(y_labelencoded)\n\none = OneHotEncoder(sparse=False)        #one hot encoding\ny_onehotencoded = one.fit_transform(y_labelencoded.reshape(-1, 1))\nprint(y_onehotencoded)\n \nstandard_scaler = StandardScaler()          #standard scaler\nx_scaler = standard_scaler.fit_transform(x_imputer)\nprint(x_scaler)\n\nminmax_scaler = MinMaxScaler()           #min max scaler\nx_minmax = minmax_scaler.fit_transform(x_imputer)\nprint(x_minmax)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T08:39:05.946686Z","iopub.execute_input":"2025-08-31T08:39:05.947078Z","iopub.status.idle":"2025-08-31T08:39:08.239454Z","shell.execute_reply.started":"2025-08-31T08:39:05.947052Z","shell.execute_reply":"2025-08-31T08:39:08.238450Z"}},"outputs":[{"name":"stdout","text":"     sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)\n0                  5.1               3.5                1.4               0.2\n1                  4.9               3.0                1.4               0.2\n2                  4.7               3.2                1.3               0.2\n3                  4.6               3.1                1.5               0.2\n4                  5.0               3.6                1.4               0.2\n..                 ...               ...                ...               ...\n145                6.7               3.0                5.2               2.3\n146                6.3               2.5                5.0               1.9\n147                6.5               3.0                5.2               2.0\n148                6.2               3.4                5.4               2.3\n149                5.9               3.0                5.1               1.8\n\n[150 rows x 4 columns]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]\n[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n 2 2]\n[[1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [1. 0. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 1. 0.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]\n [0. 0. 1.]]\n[[-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00 -1.31979479e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.50652052e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.24920112e+00 -1.34022653e+00 -1.31544430e+00]\n [-5.37177559e-01  1.93979142e+00 -1.16971425e+00 -1.05217993e+00]\n [-1.50652052e+00  7.88807586e-01 -1.34022653e+00 -1.18381211e+00]\n [-1.02184904e+00  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.74885626e+00 -3.62176246e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.44707648e+00]\n [-5.37177559e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.26418478e+00  7.88807586e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.44707648e+00]\n [-1.87002413e+00 -1.31979479e-01 -1.51073881e+00 -1.44707648e+00]\n [-5.25060772e-02  2.16998818e+00 -1.45390138e+00 -1.31544430e+00]\n [-1.73673948e-01  3.09077525e+00 -1.28338910e+00 -1.05217993e+00]\n [-5.37177559e-01  1.93979142e+00 -1.39706395e+00 -1.05217993e+00]\n [-9.00681170e-01  1.01900435e+00 -1.34022653e+00 -1.18381211e+00]\n [-1.73673948e-01  1.70959465e+00 -1.16971425e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.28338910e+00 -1.18381211e+00]\n [-5.37177559e-01  7.88807586e-01 -1.16971425e+00 -1.31544430e+00]\n [-9.00681170e-01  1.47939788e+00 -1.28338910e+00 -1.05217993e+00]\n [-1.50652052e+00  1.24920112e+00 -1.56757623e+00 -1.31544430e+00]\n [-9.00681170e-01  5.58610819e-01 -1.16971425e+00 -9.20547742e-01]\n [-1.26418478e+00  7.88807586e-01 -1.05603939e+00 -1.31544430e+00]\n [-1.02184904e+00 -1.31979479e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.02184904e+00  7.88807586e-01 -1.22655167e+00 -1.05217993e+00]\n [-7.79513300e-01  1.01900435e+00 -1.28338910e+00 -1.31544430e+00]\n [-7.79513300e-01  7.88807586e-01 -1.34022653e+00 -1.31544430e+00]\n [-1.38535265e+00  3.28414053e-01 -1.22655167e+00 -1.31544430e+00]\n [-1.26418478e+00  9.82172869e-02 -1.22655167e+00 -1.31544430e+00]\n [-5.37177559e-01  7.88807586e-01 -1.28338910e+00 -1.05217993e+00]\n [-7.79513300e-01  2.40018495e+00 -1.28338910e+00 -1.44707648e+00]\n [-4.16009689e-01  2.63038172e+00 -1.34022653e+00 -1.31544430e+00]\n [-1.14301691e+00  9.82172869e-02 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  3.28414053e-01 -1.45390138e+00 -1.31544430e+00]\n [-4.16009689e-01  1.01900435e+00 -1.39706395e+00 -1.31544430e+00]\n [-1.14301691e+00  1.24920112e+00 -1.34022653e+00 -1.44707648e+00]\n [-1.74885626e+00 -1.31979479e-01 -1.39706395e+00 -1.31544430e+00]\n [-9.00681170e-01  7.88807586e-01 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.62768839e+00 -1.74335684e+00 -1.39706395e+00 -1.18381211e+00]\n [-1.74885626e+00  3.28414053e-01 -1.39706395e+00 -1.31544430e+00]\n [-1.02184904e+00  1.01900435e+00 -1.22655167e+00 -7.88915558e-01]\n [-9.00681170e-01  1.70959465e+00 -1.05603939e+00 -1.05217993e+00]\n [-1.26418478e+00 -1.31979479e-01 -1.34022653e+00 -1.18381211e+00]\n [-9.00681170e-01  1.70959465e+00 -1.22655167e+00 -1.31544430e+00]\n [-1.50652052e+00  3.28414053e-01 -1.34022653e+00 -1.31544430e+00]\n [-6.58345429e-01  1.47939788e+00 -1.28338910e+00 -1.31544430e+00]\n [-1.02184904e+00  5.58610819e-01 -1.34022653e+00 -1.31544430e+00]\n [ 1.40150837e+00  3.28414053e-01  5.35408562e-01  2.64141916e-01]\n [ 6.74501145e-01  3.28414053e-01  4.21733708e-01  3.95774101e-01]\n [ 1.28034050e+00  9.82172869e-02  6.49083415e-01  3.95774101e-01]\n [-4.16009689e-01 -1.74335684e+00  1.37546573e-01  1.32509732e-01]\n [ 7.95669016e-01 -5.92373012e-01  4.78571135e-01  3.95774101e-01]\n [-1.73673948e-01 -5.92373012e-01  4.21733708e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  5.35408562e-01  5.27406285e-01]\n [-1.14301691e+00 -1.51316008e+00 -2.60315415e-01 -2.62386821e-01]\n [ 9.16836886e-01 -3.62176246e-01  4.78571135e-01  1.32509732e-01]\n [-7.79513300e-01 -8.22569778e-01  8.07091462e-02  2.64141916e-01]\n [-1.02184904e+00 -2.43394714e+00 -1.46640561e-01 -2.62386821e-01]\n [ 6.86617933e-02 -1.31979479e-01  2.51221427e-01  3.95774101e-01]\n [ 1.89829664e-01 -1.97355361e+00  1.37546573e-01 -2.62386821e-01]\n [ 3.10997534e-01 -3.62176246e-01  5.35408562e-01  2.64141916e-01]\n [-2.94841818e-01 -3.62176246e-01 -8.98031345e-02  1.32509732e-01]\n [ 1.03800476e+00  9.82172869e-02  3.64896281e-01  2.64141916e-01]\n [-2.94841818e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [-5.25060772e-02 -8.22569778e-01  1.94384000e-01 -2.62386821e-01]\n [ 4.32165405e-01 -1.97355361e+00  4.21733708e-01  3.95774101e-01]\n [-2.94841818e-01 -1.28296331e+00  8.07091462e-02 -1.30754636e-01]\n [ 6.86617933e-02  3.28414053e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -5.92373012e-01  1.37546573e-01  1.32509732e-01]\n [ 5.53333275e-01 -1.28296331e+00  6.49083415e-01  3.95774101e-01]\n [ 3.10997534e-01 -5.92373012e-01  5.35408562e-01  8.77547895e-04]\n [ 6.74501145e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [ 9.16836886e-01 -1.31979479e-01  3.64896281e-01  2.64141916e-01]\n [ 1.15917263e+00 -5.92373012e-01  5.92245988e-01  2.64141916e-01]\n [ 1.03800476e+00 -1.31979479e-01  7.05920842e-01  6.59038469e-01]\n [ 1.89829664e-01 -3.62176246e-01  4.21733708e-01  3.95774101e-01]\n [-1.73673948e-01 -1.05276654e+00 -1.46640561e-01 -2.62386821e-01]\n [-4.16009689e-01 -1.51316008e+00  2.38717193e-02 -1.30754636e-01]\n [-4.16009689e-01 -1.51316008e+00 -3.29657076e-02 -2.62386821e-01]\n [-5.25060772e-02 -8.22569778e-01  8.07091462e-02  8.77547895e-04]\n [ 1.89829664e-01 -8.22569778e-01  7.62758269e-01  5.27406285e-01]\n [-5.37177559e-01 -1.31979479e-01  4.21733708e-01  3.95774101e-01]\n [ 1.89829664e-01  7.88807586e-01  4.21733708e-01  5.27406285e-01]\n [ 1.03800476e+00  9.82172869e-02  5.35408562e-01  3.95774101e-01]\n [ 5.53333275e-01 -1.74335684e+00  3.64896281e-01  1.32509732e-01]\n [-2.94841818e-01 -1.31979479e-01  1.94384000e-01  1.32509732e-01]\n [-4.16009689e-01 -1.28296331e+00  1.37546573e-01  1.32509732e-01]\n [-4.16009689e-01 -1.05276654e+00  3.64896281e-01  8.77547895e-04]\n [ 3.10997534e-01 -1.31979479e-01  4.78571135e-01  2.64141916e-01]\n [-5.25060772e-02 -1.05276654e+00  1.37546573e-01  8.77547895e-04]\n [-1.02184904e+00 -1.74335684e+00 -2.60315415e-01 -2.62386821e-01]\n [-2.94841818e-01 -8.22569778e-01  2.51221427e-01  1.32509732e-01]\n [-1.73673948e-01 -1.31979479e-01  2.51221427e-01  8.77547895e-04]\n [-1.73673948e-01 -3.62176246e-01  2.51221427e-01  1.32509732e-01]\n [ 4.32165405e-01 -3.62176246e-01  3.08058854e-01  1.32509732e-01]\n [-9.00681170e-01 -1.28296331e+00 -4.30827696e-01 -1.30754636e-01]\n [-1.73673948e-01 -5.92373012e-01  1.94384000e-01  1.32509732e-01]\n [ 5.53333275e-01  5.58610819e-01  1.27429511e+00  1.71209594e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.52267624e+00 -1.31979479e-01  1.21745768e+00  1.18556721e+00]\n [ 5.53333275e-01 -3.62176246e-01  1.04694540e+00  7.90670654e-01]\n [ 7.95669016e-01 -1.31979479e-01  1.16062026e+00  1.31719939e+00]\n [ 2.12851559e+00 -1.31979479e-01  1.61531967e+00  1.18556721e+00]\n [-1.14301691e+00 -1.28296331e+00  4.21733708e-01  6.59038469e-01]\n [ 1.76501198e+00 -3.62176246e-01  1.44480739e+00  7.90670654e-01]\n [ 1.03800476e+00 -1.28296331e+00  1.16062026e+00  7.90670654e-01]\n [ 1.64384411e+00  1.24920112e+00  1.33113254e+00  1.71209594e+00]\n [ 7.95669016e-01  3.28414053e-01  7.62758269e-01  1.05393502e+00]\n [ 6.74501145e-01 -8.22569778e-01  8.76433123e-01  9.22302838e-01]\n [ 1.15917263e+00 -1.31979479e-01  9.90107977e-01  1.18556721e+00]\n [-1.73673948e-01 -1.28296331e+00  7.05920842e-01  1.05393502e+00]\n [-5.25060772e-02 -5.92373012e-01  7.62758269e-01  1.58046376e+00]\n [ 6.74501145e-01  3.28414053e-01  8.76433123e-01  1.44883158e+00]\n [ 7.95669016e-01 -1.31979479e-01  9.90107977e-01  7.90670654e-01]\n [ 2.24968346e+00  1.70959465e+00  1.67215710e+00  1.31719939e+00]\n [ 2.24968346e+00 -1.05276654e+00  1.78583195e+00  1.44883158e+00]\n [ 1.89829664e-01 -1.97355361e+00  7.05920842e-01  3.95774101e-01]\n [ 1.28034050e+00  3.28414053e-01  1.10378283e+00  1.44883158e+00]\n [-2.94841818e-01 -5.92373012e-01  6.49083415e-01  1.05393502e+00]\n [ 2.24968346e+00 -5.92373012e-01  1.67215710e+00  1.05393502e+00]\n [ 5.53333275e-01 -8.22569778e-01  6.49083415e-01  7.90670654e-01]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.18556721e+00]\n [ 1.64384411e+00  3.28414053e-01  1.27429511e+00  7.90670654e-01]\n [ 4.32165405e-01 -5.92373012e-01  5.92245988e-01  7.90670654e-01]\n [ 3.10997534e-01 -1.31979479e-01  6.49083415e-01  7.90670654e-01]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.18556721e+00]\n [ 1.64384411e+00 -1.31979479e-01  1.16062026e+00  5.27406285e-01]\n [ 1.88617985e+00 -5.92373012e-01  1.33113254e+00  9.22302838e-01]\n [ 2.49201920e+00  1.70959465e+00  1.50164482e+00  1.05393502e+00]\n [ 6.74501145e-01 -5.92373012e-01  1.04694540e+00  1.31719939e+00]\n [ 5.53333275e-01 -5.92373012e-01  7.62758269e-01  3.95774101e-01]\n [ 3.10997534e-01 -1.05276654e+00  1.04694540e+00  2.64141916e-01]\n [ 2.24968346e+00 -1.31979479e-01  1.33113254e+00  1.44883158e+00]\n [ 5.53333275e-01  7.88807586e-01  1.04694540e+00  1.58046376e+00]\n [ 6.74501145e-01  9.82172869e-02  9.90107977e-01  7.90670654e-01]\n [ 1.89829664e-01 -1.31979479e-01  5.92245988e-01  7.90670654e-01]\n [ 1.28034050e+00  9.82172869e-02  9.33270550e-01  1.18556721e+00]\n [ 1.03800476e+00  9.82172869e-02  1.04694540e+00  1.58046376e+00]\n [ 1.28034050e+00  9.82172869e-02  7.62758269e-01  1.44883158e+00]\n [-5.25060772e-02 -8.22569778e-01  7.62758269e-01  9.22302838e-01]\n [ 1.15917263e+00  3.28414053e-01  1.21745768e+00  1.44883158e+00]\n [ 1.03800476e+00  5.58610819e-01  1.10378283e+00  1.71209594e+00]\n [ 1.03800476e+00 -1.31979479e-01  8.19595696e-01  1.44883158e+00]\n [ 5.53333275e-01 -1.28296331e+00  7.05920842e-01  9.22302838e-01]\n [ 7.95669016e-01 -1.31979479e-01  8.19595696e-01  1.05393502e+00]\n [ 4.32165405e-01  7.88807586e-01  9.33270550e-01  1.44883158e+00]\n [ 6.86617933e-02 -1.31979479e-01  7.62758269e-01  7.90670654e-01]]\n[[0.22222222 0.625      0.06779661 0.04166667]\n [0.16666667 0.41666667 0.06779661 0.04166667]\n [0.11111111 0.5        0.05084746 0.04166667]\n [0.08333333 0.45833333 0.08474576 0.04166667]\n [0.19444444 0.66666667 0.06779661 0.04166667]\n [0.30555556 0.79166667 0.11864407 0.125     ]\n [0.08333333 0.58333333 0.06779661 0.08333333]\n [0.19444444 0.58333333 0.08474576 0.04166667]\n [0.02777778 0.375      0.06779661 0.04166667]\n [0.16666667 0.45833333 0.08474576 0.        ]\n [0.30555556 0.70833333 0.08474576 0.04166667]\n [0.13888889 0.58333333 0.10169492 0.04166667]\n [0.13888889 0.41666667 0.06779661 0.        ]\n [0.         0.41666667 0.01694915 0.        ]\n [0.41666667 0.83333333 0.03389831 0.04166667]\n [0.38888889 1.         0.08474576 0.125     ]\n [0.30555556 0.79166667 0.05084746 0.125     ]\n [0.22222222 0.625      0.06779661 0.08333333]\n [0.38888889 0.75       0.11864407 0.08333333]\n [0.22222222 0.75       0.08474576 0.08333333]\n [0.30555556 0.58333333 0.11864407 0.04166667]\n [0.22222222 0.70833333 0.08474576 0.125     ]\n [0.08333333 0.66666667 0.         0.04166667]\n [0.22222222 0.54166667 0.11864407 0.16666667]\n [0.13888889 0.58333333 0.15254237 0.04166667]\n [0.19444444 0.41666667 0.10169492 0.04166667]\n [0.19444444 0.58333333 0.10169492 0.125     ]\n [0.25       0.625      0.08474576 0.04166667]\n [0.25       0.58333333 0.06779661 0.04166667]\n [0.11111111 0.5        0.10169492 0.04166667]\n [0.13888889 0.45833333 0.10169492 0.04166667]\n [0.30555556 0.58333333 0.08474576 0.125     ]\n [0.25       0.875      0.08474576 0.        ]\n [0.33333333 0.91666667 0.06779661 0.04166667]\n [0.16666667 0.45833333 0.08474576 0.04166667]\n [0.19444444 0.5        0.03389831 0.04166667]\n [0.33333333 0.625      0.05084746 0.04166667]\n [0.16666667 0.66666667 0.06779661 0.        ]\n [0.02777778 0.41666667 0.05084746 0.04166667]\n [0.22222222 0.58333333 0.08474576 0.04166667]\n [0.19444444 0.625      0.05084746 0.08333333]\n [0.05555556 0.125      0.05084746 0.08333333]\n [0.02777778 0.5        0.05084746 0.04166667]\n [0.19444444 0.625      0.10169492 0.20833333]\n [0.22222222 0.75       0.15254237 0.125     ]\n [0.13888889 0.41666667 0.06779661 0.08333333]\n [0.22222222 0.75       0.10169492 0.04166667]\n [0.08333333 0.5        0.06779661 0.04166667]\n [0.27777778 0.70833333 0.08474576 0.04166667]\n [0.19444444 0.54166667 0.06779661 0.04166667]\n [0.75       0.5        0.62711864 0.54166667]\n [0.58333333 0.5        0.59322034 0.58333333]\n [0.72222222 0.45833333 0.66101695 0.58333333]\n [0.33333333 0.125      0.50847458 0.5       ]\n [0.61111111 0.33333333 0.61016949 0.58333333]\n [0.38888889 0.33333333 0.59322034 0.5       ]\n [0.55555556 0.54166667 0.62711864 0.625     ]\n [0.16666667 0.16666667 0.38983051 0.375     ]\n [0.63888889 0.375      0.61016949 0.5       ]\n [0.25       0.29166667 0.49152542 0.54166667]\n [0.19444444 0.         0.42372881 0.375     ]\n [0.44444444 0.41666667 0.54237288 0.58333333]\n [0.47222222 0.08333333 0.50847458 0.375     ]\n [0.5        0.375      0.62711864 0.54166667]\n [0.36111111 0.375      0.44067797 0.5       ]\n [0.66666667 0.45833333 0.57627119 0.54166667]\n [0.36111111 0.41666667 0.59322034 0.58333333]\n [0.41666667 0.29166667 0.52542373 0.375     ]\n [0.52777778 0.08333333 0.59322034 0.58333333]\n [0.36111111 0.20833333 0.49152542 0.41666667]\n [0.44444444 0.5        0.6440678  0.70833333]\n [0.5        0.33333333 0.50847458 0.5       ]\n [0.55555556 0.20833333 0.66101695 0.58333333]\n [0.5        0.33333333 0.62711864 0.45833333]\n [0.58333333 0.375      0.55932203 0.5       ]\n [0.63888889 0.41666667 0.57627119 0.54166667]\n [0.69444444 0.33333333 0.6440678  0.54166667]\n [0.66666667 0.41666667 0.6779661  0.66666667]\n [0.47222222 0.375      0.59322034 0.58333333]\n [0.38888889 0.25       0.42372881 0.375     ]\n [0.33333333 0.16666667 0.47457627 0.41666667]\n [0.33333333 0.16666667 0.45762712 0.375     ]\n [0.41666667 0.29166667 0.49152542 0.45833333]\n [0.47222222 0.29166667 0.69491525 0.625     ]\n [0.30555556 0.41666667 0.59322034 0.58333333]\n [0.47222222 0.58333333 0.59322034 0.625     ]\n [0.66666667 0.45833333 0.62711864 0.58333333]\n [0.55555556 0.125      0.57627119 0.5       ]\n [0.36111111 0.41666667 0.52542373 0.5       ]\n [0.33333333 0.20833333 0.50847458 0.5       ]\n [0.33333333 0.25       0.57627119 0.45833333]\n [0.5        0.41666667 0.61016949 0.54166667]\n [0.41666667 0.25       0.50847458 0.45833333]\n [0.19444444 0.125      0.38983051 0.375     ]\n [0.36111111 0.29166667 0.54237288 0.5       ]\n [0.38888889 0.41666667 0.54237288 0.45833333]\n [0.38888889 0.375      0.54237288 0.5       ]\n [0.52777778 0.375      0.55932203 0.5       ]\n [0.22222222 0.20833333 0.33898305 0.41666667]\n [0.38888889 0.33333333 0.52542373 0.5       ]\n [0.55555556 0.54166667 0.84745763 1.        ]\n [0.41666667 0.29166667 0.69491525 0.75      ]\n [0.77777778 0.41666667 0.83050847 0.83333333]\n [0.55555556 0.375      0.77966102 0.70833333]\n [0.61111111 0.41666667 0.81355932 0.875     ]\n [0.91666667 0.41666667 0.94915254 0.83333333]\n [0.16666667 0.20833333 0.59322034 0.66666667]\n [0.83333333 0.375      0.89830508 0.70833333]\n [0.66666667 0.20833333 0.81355932 0.70833333]\n [0.80555556 0.66666667 0.86440678 1.        ]\n [0.61111111 0.5        0.69491525 0.79166667]\n [0.58333333 0.29166667 0.72881356 0.75      ]\n [0.69444444 0.41666667 0.76271186 0.83333333]\n [0.38888889 0.20833333 0.6779661  0.79166667]\n [0.41666667 0.33333333 0.69491525 0.95833333]\n [0.58333333 0.5        0.72881356 0.91666667]\n [0.61111111 0.41666667 0.76271186 0.70833333]\n [0.94444444 0.75       0.96610169 0.875     ]\n [0.94444444 0.25       1.         0.91666667]\n [0.47222222 0.08333333 0.6779661  0.58333333]\n [0.72222222 0.5        0.79661017 0.91666667]\n [0.36111111 0.33333333 0.66101695 0.79166667]\n [0.94444444 0.33333333 0.96610169 0.79166667]\n [0.55555556 0.29166667 0.66101695 0.70833333]\n [0.66666667 0.54166667 0.79661017 0.83333333]\n [0.80555556 0.5        0.84745763 0.70833333]\n [0.52777778 0.33333333 0.6440678  0.70833333]\n [0.5        0.41666667 0.66101695 0.70833333]\n [0.58333333 0.33333333 0.77966102 0.83333333]\n [0.80555556 0.41666667 0.81355932 0.625     ]\n [0.86111111 0.33333333 0.86440678 0.75      ]\n [1.         0.75       0.91525424 0.79166667]\n [0.58333333 0.33333333 0.77966102 0.875     ]\n [0.55555556 0.33333333 0.69491525 0.58333333]\n [0.5        0.25       0.77966102 0.54166667]\n [0.94444444 0.41666667 0.86440678 0.91666667]\n [0.55555556 0.58333333 0.77966102 0.95833333]\n [0.58333333 0.45833333 0.76271186 0.70833333]\n [0.47222222 0.41666667 0.6440678  0.70833333]\n [0.72222222 0.45833333 0.74576271 0.83333333]\n [0.66666667 0.45833333 0.77966102 0.95833333]\n [0.72222222 0.45833333 0.69491525 0.91666667]\n [0.41666667 0.29166667 0.69491525 0.75      ]\n [0.69444444 0.5        0.83050847 0.91666667]\n [0.66666667 0.54166667 0.79661017 1.        ]\n [0.66666667 0.41666667 0.71186441 0.91666667]\n [0.55555556 0.20833333 0.6779661  0.75      ]\n [0.61111111 0.41666667 0.71186441 0.79166667]\n [0.52777778 0.58333333 0.74576271 0.91666667]\n [0.44444444 0.41666667 0.69491525 0.70833333]]\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.\n  warnings.warn(\n","output_type":"stream"}],"execution_count":29},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression, LinearRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\ndf = pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\n\na = datasets.load_iris()                #importing datasets from sklearn\nx=a.data\ny=a.target\nx_train,x_test,y_train,y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\nlog_reg = LogisticRegression(max_iter=200)       #logistic regression\nlog_reg.fit(x_train, y_train)\ny_log_reg = log_reg.predict(x_test)\nprint(y_log_reg)\n\ndt = DecisionTreeClassifier()         #decision tree\ndt.fit(x_train, y_train)\ny_dt = dt.predict(x_test)\nprint(y_dt)\n\nknn = KNeighborsClassifier(n_neighbors=5)      #knn\nknn.fit(x_train, y_train)\ny_knn = knn.predict(x_test)\nprint(y_knn)\n\nx = df.drop(columns=['popularity', 'name', 'genres', 'id'])\ny = df['popularity']\nfor i in x.columns:\n    if x[i].dtype==object:\n        x[i]=LabelEncoder.fit_transform(x[i].astype(int))\nx=x.to_numpy()\nx=x.astype(int)\ny=y.astype(int)\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\nlin_reg = LinearRegression()           #linear regression\nlin_reg.fit(x_train, y_train)\ny_lin_reg = lin_reg.predict(x_test)\nprint(y_lin_reg)\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T09:18:27.794078Z","iopub.execute_input":"2025-08-31T09:18:27.794393Z","iopub.status.idle":"2025-08-31T09:18:30.335069Z","shell.execute_reply.started":"2025-08-31T09:18:27.794369Z","shell.execute_reply":"2025-08-31T09:18:30.334100Z"}},"outputs":[{"name":"stdout","text":"[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0]\n[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0]\n[1 0 2 1 1 0 1 2 1 1 2 0 0 0 0 1 2 1 1 2 0 2 0 2 2 2 2 2 0 0]\n","output_type":"stream"},{"name":"stderr","text":"/tmp/ipykernel_36/3518256920.py:37: RuntimeWarning: invalid value encountered in cast\n  x=x.astype(int)\n","output_type":"stream"},{"name":"stdout","text":"[8.79836651 8.79836651 8.79836651 ... 8.79836651 8.79836651 8.79836651]\n","output_type":"stream"}],"execution_count":42},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression,LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score,confusion_matrix\n\n\n\ndf = pd.read_csv('/kaggle/input/artist/artists.csv')   #loads dataset\nx= df.drop(columns=['id','name','genres','popularity','is_popular'],errors='ignore')\ny = df['popularity']\nx.to_numpy()\ny.astype(int)\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n\nlog_reg = LogisticRegression(max_iter=200)\nlog_reg.fit(x_train, y_train)\ny_log_reg = log_reg.predict(x_test)\n\nlin_reg = LinearRegression()\nlin_reg.fit(x_train, y_train)\ny_lin_reg = lin_reg.predict(x_test)\n\nprint('regression evaluation:-')      #regression\nrmse = np.sqrt(mean_squared_error(y_test, y_lin_reg))\nmae = mean_absolute_error(y_test, y_lin_reg)\nprint(\"RMSE:\", rmse)\nprint(\"MAE:\", mae)\n\nprint('classification:-')         #classification\nprint('Accuracy:-', accuracy_score(y_test, y_log_reg))\nprint('Precision:-', precision_score(y_test, y_log_reg))\nprint('Recall:-', recall_score(y_test, y_log_reg))\nprint('F1-score:-', f1_score(y_test, y_log_reg))\n\nprint('confusion matrix:-')\nprint('confusion matrix:-', confusion_matrix(y_test,y_log_reg))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-31T09:38:44.845558Z","iopub.execute_input":"2025-08-31T09:38:44.846829Z","iopub.status.idle":"2025-08-31T09:38:46.431246Z","shell.execute_reply.started":"2025-08-31T09:38:44.846790Z","shell.execute_reply":"2025-08-31T09:38:46.429820Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mParserError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m/tmp/ipykernel_36/1553551992.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/kaggle/input/artist/artists.csv'\u001b[0m\u001b[0;34m)\u001b[0m   \u001b[0;31m#loads dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"is_popular\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"popularity\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"popularity\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmedian\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'id'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'name'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'genres'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'popularity'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'is_popular'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'ignore'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    624\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    625\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 626\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    627\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    628\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m   1921\u001b[0m                     \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1922\u001b[0m                     \u001b[0mcol_dict\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1923\u001b[0;31m                 \u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m  \u001b[0;31m# type: ignore[attr-defined]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1924\u001b[0m                     \u001b[0mnrows\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1925\u001b[0m                 )\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/c_parser_wrapper.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m    232\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlow_memory\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 234\u001b[0;31m                 \u001b[0mchunks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_low_memory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    235\u001b[0m                 \u001b[0;31m# destructive to chunks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_concatenate_chunks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchunks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mparsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.read_low_memory\u001b[0;34m()\u001b[0m\n","\u001b[0;32mparsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._read_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32mparsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._tokenize_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32mparsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._check_tokenize_status\u001b[0;34m()\u001b[0m\n","\u001b[0;32mparsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.raise_parser_error\u001b[0;34m()\u001b[0m\n","\u001b[0;31mParserError\u001b[0m: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'."],"ename":"ParserError","evalue":"Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.","output_type":"error"}],"execution_count":50}]}